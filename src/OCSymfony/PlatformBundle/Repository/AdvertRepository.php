<?php

namespace OCSymfony\PlatformBundle\Repository;

/**
 * AdvertRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdvertRepository extends \Doctrine\ORM\EntityRepository {

    public function myFindAll() {
        // Première méthode en passant par l'EntityManager
        $queryBuilder = $this->_em->createQueryBuilder()
            ->select('a')
            ->from($this->_entityName, 'a');

        // Seconde méthode
        $queryBuilder = $this->createQueryBuilder('a');

        // Récupération de la query
        $query = $queryBuilder->getQuery();

        $results = $query->getResult();

        return $results;

    }

    public function myFindOne($id) {
        $qb = $this->createQueryBuilder('a');

        $qb->where('a.id = :id')->setParameter('id', $id);

        return $qb->getQuery()->getResult();
    }

    public function findByAuthorAndDate($author, $year) {

        $qb = $this->createQueryBuilder('a');

        $qb->where('a.author = :author')->setParameter('author', $author)
            ->andWhere('a.date < :year')->setParameter('year', $year)
            ->orderBy('a.date', 'DESC');

        return $qb->getQuery()->getResult();

    }

    public function getAdvertWithApplications() {
        $qb = $this->createQueryBuilder('a')
            ->leftJoin('a.applications', 'app')
            ->addSelect('app');

        return $qb->getQuery()->getResult();
    }

    public function getAdvertWithCategoies(array $categoryNames) {

        // Selection de toutes les annonces
        $qb = $this->createQueryBuilder('a');

        //Jointure de la table category
        $qb->innerJoin('a.categories', 'c')
            ->addSelect('c');

        // Filtrage sur le nom des catégories a l'aide du IN
        $qb->($qb->expr()->in('c.name', $categoryNames));
    }
}
